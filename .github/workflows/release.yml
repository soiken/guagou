name: Update Release with Latest File

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  update-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main # Make sure to checkout the correct branch

      - name: Debug Information
        run: |
          echo "GH_PAT: ${{ secrets.GH_PAT }}"
          git remote -v
          git status
          git log -n 5
          # Add more commands as needed to gather information

      - name: Debug Environment Variables
        run: |
          env

      - name: Generate Release Tag
        id: tag
        run: |
          echo "::set-output name=release_tag::UserBuild_$(date +'%Y.%m.%d_%H-%M')"
        continue-on-error: true

      - name: Set up Git for Release
        run: |
          git config --global user.email "neilkan8@gmail.com"
          git config --global user.name "Nekios"
        # Ensure this step is set up for later release-related actions

      - name: Move file to workspace
        run: mv /home/runner/work/guagou/guagou/build/soiken-1.0.0.mpackage latest_file.mpackage

      - name: Create and push tag
        run: |
          git tag -a ${{ steps.tag.outputs.release_tag }} -m "Release ${{ steps.tag.outputs.release_tag }}"
          git push origin ${{ steps.tag.outputs.release_tag }}
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: build
        run: make build
      - name: version
        run: echo "::set-output name=version::$(./bin/azblogfilter --version)"
        id: version
        
      - name: release
        uses: actions/create-release@v1
        id: create_release_0
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            latest_file.mpackage
          token: ${{ secrets.GH_PAT }}

      - name: Delete Previous Release
        run: |
          release_id=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.id')
          if [ ! -z "$release_id" ]; then
            curl -X DELETE -H "Authorization: token ${{ secrets.GH_PAT }}" https://api.github.com/repos/${{ github.repository }}/releases/$release_id
          fi
