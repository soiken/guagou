name: Build project using muddler and upload artifact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Muddle
        uses: demonnic/build-with-muddler@main
        with:
          muddlerVersion: 0.5
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Soiken
          path: build/
          
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: Soiken
          path: downloaded-artifact

      - name: Print Current Directory
        run: pwd

      - name: Print Workspace Directory
        run: echo ${{ github.workspace }}
      
      - name: List Files in Workspace
        run: ls -R ${{ github.workspace }}

      - name: Debug Step
        run: |
          echo "GitHub Workspace: ${{ github.workspace }}"
          echo "Target Folder: $GITHUB_WORKSPACE/build"
          echo "Repository Path: $GITHUB_REPOSITORY"
          echo "Location: $(pwd)"
          ls -R ${{ github.workspace }}/downloaded-artifact
        env:
          MUDDLER_VERSION: 0.5
      
      - name: Move Artifact to Repository Folder
        run: cp -r ${{ github.workspace }}/downloaded-artifact/* $GITHUB_WORKSPACE/build/
        env:
          MUDDLER_VERSION: 0.5

      - name: Generate Release Tag
        id: tag
        run: |
          echo "::set-output name=release_tag::UserBuild_$(date +'%Y.%m.%d_%H-%M')"
        continue-on-error: true

      - name: Set up Git for Release
        run: |
          git config --global user.email "neilkan8@gmail.com"
          git config --global user.name "Nekios"
        # Ensure this step is set up for later release-related actions

      - name: Move file to workspace
        run: mv /home/runner/work/guagou/guagou/build/soiken-1.0.0.mpackage latest_file.mpackage

      - name: Create and push tag
        run: |
          git tag -a ${{ steps.tag.outputs.release_tag }} -m "Release ${{ steps.tag.outputs.release_tag }}"
          git push origin ${{ steps.tag.outputs.release_tag }}
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: build
        run: make build
      - name: version
        run: echo "::set-output name=version::$(./bin/azblogfilter --version)"
        id: version
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            latest_file.mpackage
          token: ${{ secrets.GH_PAT }}
